<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.shawn.sales.persistance.CustomerDao">
	<resultMap id="BaseResultMap" type="Customer">
		<id column="id" property="id" jdbcType="BIGINT" />
		<result column="userName" property="userName" />
		<result column="age" property="age" />
		<result column="sex" property="sex" />
		<result column="phone" property="phone" />
		<result column="address" property="address" />
		<result column="userId" property="userId" />
		<result column="isDeleted" property="isDeleted" />
		<result column="createTime" property="createTime" />
		<result column="updateTime" property="updateTime" />
	</resultMap>

	<sql id="Table_Name">
		`customer`
	</sql>
	<sql id="Simple_Column_List">
		id,userName,age,sex,phone,address,userId,isDeleted,createTime,updateTime
	</sql>
	<sql id="Base_Column_List">
		id,userName,age,sex,phone,address,userId,isDeleted,createTime,updateTime
	</sql>

	<insert id="create" parameterType="Customer">
		<selectKey resultType="java.lang.Long" keyProperty="id" order="AFTER">
			SELECT LAST_INSERT_ID()
		</selectKey>
		INSERT INTO
		<include refid="Table_Name" />
		<trim prefix="(" suffix=")" suffixOverrides=",">
			id,
			<if test="userName != null">
				userName,
			</if>
			<if test="age != null">
				age,
			</if>
			<if test="sex != null">
				sex,
			</if>
			<if test="phone != null">
				phone,
			</if>
			<if test="address != null">
				address,
			</if>
			<if test="userId != null">
				userId,
			</if>
			<if test="isDeleted != null">
				isDeleted,
			</if>
			<if test="createTime != null">
				createTime,
			</if>
			<if test="updateTime != null">
				updateTime,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			#{id,jdbcType=BIGINT},
			<if test="userName != null">
				#{userName},
			</if>
			<if test="age != null">
				#{age},
			</if>
			<if test="sex != null">
				#{sex},
			</if>
			<if test="phone != null">
				#{phone},
			</if>
			<if test="address != null">
				#{address},
			</if>
			<if test="userId != null">
				#{userId},
			</if>
			<if test="isDeleted != null">
				#{isDeleted},
			</if>
			<if test="createTime != null">
				#{createTime},
			</if>
			<if test="updateTime != null">
				#{updateTime},
			</if>
		</trim>
	</insert>
	<update id="updateIfNecessary" parameterType="Customer">
		UPDATE
		<include refid="Table_Name" />
		<set>
			<if test="userName != null">
				userName = #{userName},
			</if>
			<if test="age != null">
				age = #{age},
			</if>
			<if test="sex != null">
				sex = #{sex},
			</if>
			<if test="phone != null">
				phone = #{phone},
			</if>
			<if test="address != null">
				address = #{address},
			</if>
			<if test="userId != null">
				userId = #{userId},
			</if>
			<if test="isDeleted != null">
				isDeleted = #{isDeleted},
			</if>
			<if test="createTime != null">
				createTime = #{createTime},
			</if>
			<if test="updateTime != null">
				updateTime = #{updateTime},
			</if>
		</set>
		WHERE id = #{id}
	</update>
	<update id="update" parameterType="Customer">
		UPDATE
		<include refid="Table_Name" />
		SET 
		<![CDATA[
		userName = #{userName},
		age = #{age},
		sex = #{sex},
		phone = #{phone},
		address = #{address},
		userId = #{userId},
		isDeleted = #{isDeleted},		
		create_time = 	#{createTime},
		update_time = #{updateTime}
		WHERE id = #{id,jdbcType=BIGINT}
		]]>
	</update>

	<select id="getById" parameterType="long" resultMap="BaseResultMap">
		SELECT
		<include refid="Base_Column_List" />
		FROM
		<include refid="Table_Name" />
		WHERE `id` = #{id}
	</select>

	<delete id="delete" parameterType="long">
		DELETE FROM
		<include refid="Table_Name" />
		WHERE `id` = #{id}
	</delete>

	<!-- custom sql -->
	<select id="getList" resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from
		<include refid="Table_Name" />
		where isDeleted = 0
		<if test="userId != null">
			and userId = #{userId}
		</if>
		order by id desc
		limit #{start},#{count}
	</select>
	<select id="getAll" resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from
		<include refid="Table_Name" />
		where isDeleted = 0
		<if test="userId != null">
			and userId = #{userId}
		</if>		
	</select>
	<select id="getListCount" resultType="integer">
		select
		count(*)
		from
		<include refid="Table_Name" />
		where isDeleted = 0
		<if test="userId != null">
			and userId = #{userId}
		</if>		
	</select>
	
	
</mapper>